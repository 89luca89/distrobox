.\
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "DISTROBOX-RM" "1" "Feb 2024" "Distrobox" "User Manual"
.hy
.SH NAME
.IP
.nf
\f[C]
distrobox rm
distrobox-rm
\f[R]
.fi
.SH DESCRIPTION
.PP
distrobox-rm delete one of the available distroboxes.
.SH SYNOPSIS
.PP
\f[B]distrobox rm\f[R]
.IP
.nf
\f[C]
--all/-a:       delete all distroboxes
--force/-f:     force deletion
--rm-home:      remove the mounted home if it differs from the host user\[aq]s one
--root/-r:      launch podman/docker/lilipod with root privileges. Note that if you need root this is the preferred
            way over \[dq]sudo distrobox\[dq] (note: if using a program other than \[aq]sudo\[aq] for root privileges is necessary,
            specify it through the DBX_SUDO_PROGRAM env variable, or \[aq]distrobox_sudo_program\[aq] config variable)
--help/-h:      show this message
--verbose/-v:       show more verbosity
--version/-V:       show version
\f[R]
.fi
.SH EXAMPLES
.IP
.nf
\f[C]
distrobox-rm container-name [--force] [--all]
\f[R]
.fi
.PP
You can also use environment variables to specify container manager and
name:
.IP
.nf
\f[C]
DBX_CONTAINER_MANAGER=\[dq]docker\[dq] DBX_CONTAINER_NAME=test-alpine distrobox-rm
\f[R]
.fi
.SH ENVIRONMENT VARIABLES
.IP
.nf
\f[C]
DBX_CONTAINER_MANAGER
DBX_CONTAINER_NAME
DBX_NON_INTERACTIVE
DBX_SUDO_PROGRAM
\f[R]
.fi
