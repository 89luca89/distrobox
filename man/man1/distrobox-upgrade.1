.\
.\"
.TH "DISTROBOX\-UPGRADE" "1" "Jan 2025" "Distrobox" "User Manual"
.SH NAME
.IP
.EX
distrobox\-upgrade
.EE
.SH DESCRIPTION
distrobox\-upgrade will enter the specified list of containers and will
perform an upgrade using the container\[cq]s package manager.
.SH SYNOPSIS
\f[B]distrobox upgrade\f[R]
.IP
.EX
\-\-help/\-h:      show this message
\-\-all/\-a:       perform for all distroboxes
\-\-running:      perform only for running distroboxes
\-\-root/\-r:      launch podman/docker/lilipod with root privileges. Note that if you need root this is the preferred
            way over \[dq]sudo distrobox\[dq] (note: if using a program other than \[aq]sudo\[aq] for root privileges is necessary,
            specify it through the DBX_SUDO_PROGRAM env variable, or \[aq]distrobox_sudo_program\[aq] config variable)
\-\-verbose/\-v:       show more verbosity
\-\-version/\-V:       show version
.EE
.SH EXAMPLES
Upgrade all distroboxes
.IP
.EX
distrobox\-upgrade \-\-all
.EE
.PP
Upgrade all running distroboxes
.IP
.EX
distrobox\-upgrade \-\-all \-\-running
.EE
.PP
Upgrade a specific distrobox
.IP
.EX
distrobox\-upgrade alpine\-linux 
.EE
.PP
Upgrade a list of distroboxes
.IP
.EX
distrobox\-upgrade alpine\-linux ubuntu22 my\-distrobox123
.EE
.PP
\f[B]Automatically update all distro\f[R]
.PP
You can create a systemd service to perform distrobox\-upgrade
automatically, this example shows how to run it daily:
.PP
\[ti]/.config/systemd/user/distrobox\-upgrade.service
.IP
.EX
[Unit]
Description=distrobox\-upgrade Automatic Update

[Service]
Type=simple
ExecStart=distrobox\-upgrade \-\-all
StandardOutput=null
.EE
.PP
\[ti]/.config/systemd/user/distrobox\-upgrade.timer
.IP
.EX
[Unit]
Description=distrobox\-upgrade Automatic Update Trigger

[Timer]
OnBootSec=1h
OnUnitInactiveSec=1d

[Install]
WantedBy=timers.target
.EE
.PP
Then simply do a
\f[CR]systemctl \-\-user daemon\-reload && systemctl \-\-user enable \-\-now distrobox\-upgrade.timer\f[R]
