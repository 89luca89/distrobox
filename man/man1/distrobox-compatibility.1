.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "DISTROBOX\-COMPATIBILITY\.1" "" "March 2022" "Distrobox" "Distrobox"
.SH "NAME"
\fBdistrobox\-compatibility\.1\fR \- Compatibility
.P
This project \fBdoes not need a dedicated image\fR\. It can use any OCI images from docker\-hub, quay\.io, or any registry of your choice\.
.P
Granted, they may not be as featureful as expected (some of them do not even have \fBwhich\fR, \fBmount\fR, \fBless\fR or \fBvi\fR) but that\'s all doable in the container itself after bootstrapping it\.
.P
The main concern is having basic Linux utilities (\fBmount\fR), basic user management utilities (\fBusermod, passwd\fR), and \fBsudo\fR correctly set\.
.SS "Supported container managers"
\fBdistrobox\fR can run on either \fBpodman\fR or \fBdocker\fR
.P
It depends either on \fBpodman\fR configured in \fBrootless mode\fR or on \fBdocker\fR configured without sudo (follow THIS instructions \fIhttps://docs\.docker\.com/engine/install/linux\-postinstall/\fR)
.IP "\[ci]" 4
Minimum podman version: \fB2\.1\.0\fR
.IP "\[ci]" 4
Minimum docker version: \fB18\.06\.1\fR
.IP "" 0
.P
Follow the official installation guide here:
.IP "\[ci]" 4
https://podman\.io/getting\-started/installation
.IP "\[ci]" 4
https://docs\.docker\.com/engine/install
.IP "\[ci]" 4
https://docs\.docker\.com/engine/install/linux\-postinstall/
.IP "" 0
.SS "Containers Distros"
Distrobox guests tested successfully with the following container images:
.TS
allbox;
l l l.
Distro	Version	Images
AlmaLinux	8	docker\.io/library/almalinux:8
AlmaLinux (UBI)	8	docker\.io/almalinux/8\-base
.br
docker\.io/almalinux/8\-init
Alpine Linux	3\.14
.br
3\.15	docker\.io/library/alpine:latest
AmazonLinux	2	docker\.io/library/amazonlinux:2\.0\.20211005\.0
AmazonLinux	2022	public\.ecr\.aws/amazonlinux/amazonlinux:2022
Archlinux	\~	docker\.io/library/archlinux:latest
ClearLinux	\~	docker\.io/library/clearlinux:latest
.br
docker\.io/library/clearlinux:base
CentOS	7
.br
8	quay\.io/centos/centos:7
.br
quay\.io/centos/centos:8
CentOS Stream	8
.br
9	quay\.io/centos/centos:stream8
.br
quay\.io/centos/centos:stream9
RedHat (UBI)	7
.br
8	registry\.access\.redhat\.com/ubi7/ubi
.br
registry\.access\.redhat\.com/ubi7/ubi\-init
.br
registry\.access\.redhat\.com/ubi8/ubi
.br
registry\.access\.redhat\.com/ubi8/ubi\-init
Debian	8
.br
9
.br
10
.br
11	docker\.io/library/debian:8
.br
docker\.io/library/debian:9
.br
docker\.io/library/debian:10
.br
docker\.io/library/debian:stable
.br
docker\.io/library/debian:stable\-backports
Debian	Testing	docker\.io/library/debian:testing
.br
docker\.io/library/debian:testing\-backports
Debian	Unstable	docker\.io/library/debian:unstable
Neurodebian	nd100	docker\.io/library/neurodebian:nd100
Fedora	34
.br
35
.br
36
.br
Rawhide	registry\.fedoraproject\.org/fedora\-toolbox:34
.br
docker\.io/library/fedora:34
.br
registry\.fedoraproject\.org/fedora\-toolbox:35
.br
docker\.io/library/fedora:35
.br
docker\.io/library/fedora:36
.br
docker\.io/library/fedora:rawhide
Mageia	8	docker\.io/library/mageia
Opensuse	Leap	registry\.opensuse\.org/opensuse/leap:latest
Opensuse	Tumbleweed	registry\.opensuse\.org/opensuse/tumbleweed:latest
.br
registry\.opensuse\.org/opensuse/toolbox:latest
Oracle Linux	7
.br
8	container\-registry\.oracle\.com/os/oraclelinux:7
.br
container\-registry\.oracle\.com/os/oraclelinux:8
Rocky Linux	8	docker\.io/rockylinux/rockylinux:8
Scientific Linux	7	docker\.io/library/sl:7
Slackware	14\.2	docker\.io/vbatts/slackware:14\.2
Slackware	current	docker\.io/vbatts/slackware:current
Ubuntu	14\.04
.br
16\.04
.br
18\.04
.br
20\.04
.br
21\.10
.br
22\.04	docker\.io/library/ubuntu:14\.04
.br
docker\.io/library/ubuntu:16\.04
.br
docker\.io/library/ubuntu:18\.04
.br
docker\.io/library/ubuntu:20\.04
.br
docker\.io/library/ubuntu:21\.10
.br
docker\.io/library/ubuntu:22\.04
Kali Linux	rolling	docker\.io/kalilinux/kali\-rolling:latest
Void Linux	\~	ghcr\.io/void\-linux/void\-linux:latest\-thin\-bb\-x86_64
.br
ghcr\.io/void\-linux/void\-linux:latest\-thin\-bb\-x86_64\-musl
.br
ghcr\.io/void\-linux/void\-linux:latest\-full\-x86_64
.br
ghcr\.io/void\-linux/void\-linux:latest\-full\-x86_64\-musl
Gentoo Linux	rolling	You will have to Build your own \fIdistrobox_gentoo\.md\fR to have a complete Gentoo docker image
.TE
.P
Note however that if you use a non\-toolbox preconfigured image (e\.g\. images pre\-baked to work with https://github\.com/containers/toolbox), the \fBfirst\fR \fBdistrobox\-enter\fR you\'ll perform can take a while as it will download and install the missing dependencies\.
.P
A small time tax to pay for the ability to use any type of image\. This will \fBnot\fR occur after the first time, \fBsubsequent enters will be much faster\.\fR
.P
NixOS is not a supported container distro, and there are currently no plans to bring support to it\. If you are looking for unprivlaged NixOS environments, we suggest you look into nix\-shell \fIhttps://nixos\.org/manual/nix/unstable/command\-ref/nix\-shell\.html\fR\.
.P
If your distro of choice is not on the list, open an issue requesting support for it, we can work together to check if it is possible to add support for it\.
.P
Or just try using it anyway, if it works, open an issue and it will be added to the list!
.P
For older distributions like CentOS 6, Debian 7, Ubuntu 12\.04, compatibility is not assured\.
.P
Their \fBlibc\fR version is incompatible with kernel releases after \fB>=4\.11\fR\. A work around this is to use the \fBvsyscall=emulate\fR flag in the bootloader of the host\.
.P
Keep also in mind that mirrors could be down for such old releases, so you will need to build a custom distrobox image to ensure basic dependencies are met \fI\./distrobox_custom\.md\fR\.
