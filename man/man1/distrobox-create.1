.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "DISTROBOX\-CREATE\.1" "" "January 2022" "Distrobox" "Distrobox"
.SH "NAME"
\fBdistrobox\-create\.1\fR
.SS "Create the distrobox"
distrobox\-create takes care of creating the container with input name and image\. The created container will be tightly integrated with the host, allowing sharing of the HOME directory of the user, external storage, external usb devices and graphical apps (X11/Wayland), and audio\.
.P
Usage:
.IP "" 4
.nf
distrobox\-create \-\-image registry\.fedoraproject\.org/fedora\-toolbox:35 \-\-name fedora\-toolbox\-35
distrobox\-create \-\-clone fedora\-toolbox\-35 \-\-name fedora\-toolbox\-35\-copy
distrobox\-create \-\-image alpine my\-alpine\-container
distrobox create \-\-image fedora:35 \-\-name test \-\-volume /opt/my\-dir:/usr/local/my\-dir:rw \-\-additional\-flags "\-\-pids\-limit \-1"
distrobox create \-\-image fedora:35 \-\-name test\-\-additional\-flags "\-\-env MY_VAR\-value"
.fi
.IP "" 0
.P
You can also use environment variables to specify container name and image
.IP "" 4
.nf
DBX_NON_INTERACTIVE=1 DBX_CONTAINER_NAME=test\-alpine DBX_CONTAINER_IMAGE=alpine distrobox\-create
.fi
.IP "" 0
.P
Supported environment variables:
.IP "" 4
.nf
DBX_NON_INTERACTIVE
DBX_CONTAINER_NAME
DBX_CONTAINER_IMAGE
.fi
.IP "" 0
.P
Options:
.IP "" 4
.nf
\-\-image/\-i:		image to use for the container	default: registry\.fedoraproject\.org/fedora\-toolbox:35
\-\-name/\-n:		name for the distrobox		default: fedora\-toolbox\-35
\-\-non\-interactive/\-N:	non\-interactive, pull images without asking
\-\-clone/\-c:		name of the distrobox container to use as base for a new container
			this will be useful to either rename an existing distrobox or have multiple copies
			of the same environment\.
\-\-home/\-H		select a custom HOME directory for the container\. Useful to avoid host\'s home littering with temp files\.
\-\-volume		additional volumes to add to the container
\-\-additional\-flags/\-a:	additional flags to pass to the container manager command
\-\-help/\-h:		show this message
\-\-verbose/\-v:		show more verbosity
\-\-version/\-V:		show version
.fi
.IP "" 0
.P
The \fB\-\-additional\-flags\fR or \fB\-a\fR is useful to modify defaults in the container creations\. For example:
.IP "" 4
.nf
distrobox create \-i docker\.io/library/archlinux \-n dev\-arch

podman container inspect dev\-arch | jq \'\.[0]\.HostConfig\.PidsLimit\'
2048

distrobox rm \-f dev\-arch
distrobox create \-i docker\.io/library/archlinux \-n dev\-arch \-\-volume $CBL_TC:/tc \-\-additional\-flags "\-\-pids\-limit \-1"

podman container inspect dev\-arch | jq \'\.[0]\.HostConfig,\.PidsLimit\'
0
.fi
.IP "" 0
.P
Additional volumes can be specified using the \fB\-\-volume\fR flag\. This flag follows the same standard as \fBdocker\fR and \fBpodman\fR to specify the mount point so \fB\-\-volume SOURCE_PATH:DEST_PATH:MODE\fR\.
.IP "" 4
.nf
distrobox create \-\-image docker\.io/library/archlinux \-\-name dev\-arch \-\-volume /usr/share/:/var/test:ro
.fi
.IP "" 0
.P
During container creation, it is possible to specify (using the additional\-flags) some environment variables that will persist in the container and be independent from your environment:
.IP "" 4
.nf
distrobox create \-\-image fedora:35 \-\-name test\-\-additional\-flags "\-\-env MY_VAR\-value"
.fi
.IP "" 0

