#!/bin/sh
# SPDX-License-Identifier: GPL-3.0-only
#
# This file is part of the distrobox project: https://github.com/89luca89/distrobox
#
# Copyright (C) 2021 distrobox contributors
#
# distrobox is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# distrobox is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with distrobox; if not, see <http://www.gnu.org/licenses/>.

# POSIX

# Defaults
verbose=0
version="1.2.6"

# Print usage to stdout.
# Arguments:
#   None
# Outputs:
#   print usage with examples.
show_help() {
	cat <<EOF

distrobox version: ${version}

distrobox-list lists available distroboxes.

Usage:

	distrobox-list

Options:

	--help/-h:		show this message
	--verbose/-v:		show more verbosity
	--version/-V:		show version
EOF
}

# Parse arguments
while :; do
	case $1 in
	-h | --help)
		# Call a "show_help" function to display a synopsis, then exit.
		show_help
		exit 0
		;;
	-v | --verbose)
		verbose=1
		shift
		;;
	-V | --version)
		printf "distrobox: %s\n" "${version}"
		exit 0
		;;
	--) # End of all options.
		shift
		break
		;;
	*) # Default case: If no more options then break out of the loop.
		break ;;
	esac
done

set -o errexit
set -o nounset
# set verbosity
if [ "${verbose}" -ne 0 ]; then
	set -o xtrace
fi

# We depend on a container manager let's be sure we have it
# First we use podman, else docker
container_manager="podman"
# Be sure we have a container manager to work with.
if ! command -v podman >/dev/null; then
	# If no podman, try docker.
	container_manager="docker"
	if ! command -v docker >/dev/null; then
		# Error: we need at least one between docker or podman.
		printf >&2 "Missing dependency: we need a container manager\n."
		printf >&2 "Please install one of podman or docker.\n"
		exit 127
	fi
fi
# add  verbose if -v is specified
if [ "${verbose}" -ne 0 ]; then
	container_manager="${container_manager} --log-level debug"
fi

container_list=$(${container_manager} ps -a --no-trunc --format "{{.ID}}|{{.Image}}|{{.Names}}|{{.State}}|{{.Mounts}}")
IFS='
'
printf " %-30s | %-50s | %-40s | %-30s\n" "ID" "IMAGE" "STATUS" "NAME"
for container in ${container_list}; do
	if [ -z "${container##*distrobox*}" ]; then
		container_id="$(echo "${container}" | cut -d'|' -f1)"
		container_name="$(echo "${container}" | cut -d'|' -f3)"
		container_status="$(echo "${container}" | cut -d'|' -f4)"
		container_image="$(echo "${container}" | cut -d'|' -f2)"
		if [ -z "${container_status##*Up*}" ] || [ -z "${container_status##*running*}" ]; then
			printf "\033[32m %-30s | %-50s | %-40s | %-30s\n\033[0m" "${container_id}" "${container_image}" "${container_status}" "${container_name}"
		else
			printf "\033[33m %-30s | %-50s | %-40s | %-30s\n\033[0m" "${container_id}" "${container_image}" "${container_status}" "${container_name}"
		fi
	fi
done
